<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Filuet.Infrastructure.Ordering</name>
    </assembly>
    <members>
        <member name="M:Filuet.Infrastructure.Ordering.Builders.OrderBuilder.WithTotalValues(Filuet.Infrastructure.Abstractions.Business.Money,Filuet.Infrastructure.Abstractions.Business.Money,Filuet.Infrastructure.Abstractions.Business.Money,Filuet.Infrastructure.Abstractions.Business.Money,System.Decimal)">
            <summary>
            
            </summary>
            <param name="total">Order due</param>
            <param name="paid">Money income</param>
            <param name="change">Change to be returned to the customer</param>
            <param name="changeGiven"></param>
            <param name="points"></param>
            <returns></returns>
        </member>
        <member name="F:Filuet.Infrastructure.Ordering.Dto.OrderRollbackReason.Expired">
            <summary>
            The order pricing is outdated or the payment link has expired
            </summary>
        </member>
        <member name="F:Filuet.Infrastructure.Ordering.Dto.OrderRollbackReason.Cancelled">
            <summary>
            Cancelled by the customer
            </summary>
        </member>
        <member name="F:Filuet.Infrastructure.Ordering.Dto.OrderRollbackReason.Changed">
            <summary>
            Order params have been changed, cost recalculation is needed
            </summary>
        </member>
        <member name="M:Filuet.Infrastructure.Ordering.Models.OrderItem.Create(System.String,System.UInt32)">
            <summary>
            Create single order line
            </summary>
            <param name="productUid">Unique identifier of product. E.g. SKU</param>
            <param name="quantity"></param>
            <returns></returns>
        </member>
        <member name="P:Filuet.Infrastructure.Ordering.Models.OrderLine.Name">
            <summary>
            Product name
            </summary>
        </member>
        <member name="P:Filuet.Infrastructure.Ordering.Models.OrderLine.TotalAmount">
            <summary>
            Order item final price: E(totalAmount) = totalDue (aka order total)
            </summary>
        </member>
        <member name="M:Filuet.Infrastructure.Ordering.Models.OrderLine.Create(System.String,System.String,System.UInt32,Filuet.Infrastructure.Abstractions.Business.Money,Filuet.Infrastructure.Abstractions.Business.Money,System.Nullable{System.Decimal})">
            <summary>
            Create order line
            </summary>
            <param name="productUid">Unique identifier of product. E.g. SKU</param>
            <param name="quantity">quantity of order line</param>
            <param name="amount">Unit cost</param>
            <param name="totalAmount">Total cost of line</param>
            <param name="points">loyalty points</param>
            <returns></returns>
        </member>
        <member name="M:Filuet.Infrastructure.Ordering.Models.OrderLine.Create(System.String,Filuet.Infrastructure.Abstractions.Business.Money)">
            <summary>
            Create order line with quantity equals to 1
            </summary>
            <param name="productUid">Unique identifier of product. E.g. SKU</param>
            <param name="amount">Unit cost</param>
            <returns></returns>
        </member>
        <member name="M:Filuet.Infrastructure.Ordering.Services.ICatalogService.GetNames(System.Collections.Generic.IEnumerable{System.String},Filuet.Infrastructure.Abstractions.Enums.Language,Filuet.Infrastructure.Abstractions.Enums.Country)">
            <summary>
            Get product names by unique identifiers
            </summary>
            <param name="uids">sku</param>
            <param name="language"></param>
            <param name="country"></param>
            <returns></returns>
        </member>
        <member name="M:Filuet.Infrastructure.Ordering.Services.ICatalogService.GetWeights(System.Collections.Generic.IEnumerable{System.String},Filuet.Infrastructure.Abstractions.Enums.Country)">
            <summary>
            Get products weight
            </summary>
            <param name="uids">sku</param>
            <param name="country">country</param>
            <returns></returns>
        </member>
    </members>
</doc>
